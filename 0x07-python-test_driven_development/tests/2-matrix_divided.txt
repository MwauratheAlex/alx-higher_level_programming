=====================
2-matrix_divided.py
=====================
This module contains one function ``matrix_divided(matrix, div)```

The function divides all elements of a matrix by div

All elements of the matrix are divided by div, rounded to 2 decimal places

Returns a new matrix

======
Usage:
======
First import:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal usage:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix must be a list of lists of integers or floats:
	>>> matrix_divided(([1, 2, 3], [4, 5, 6]), 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], (4, 5, 6)], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([['a', 'b', 'c'], [1, 2, 3]], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
Each row of the matrix must be of the same size:
	>>> matrix_divided([[1, 2, 3], [1, 2]], 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Div must be a number (integer or float):
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], (1, 2))
	Traceback (most recent call last):
	...
	TypeError: div must be a number
