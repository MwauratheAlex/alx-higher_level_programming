==================
7-base_geometry.py
==================
Module contains two functions,
``area(self)``
``integer_validator(self, name, value)``

=======
Usage:
=======
First import:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Create instance:
	>>> bg = BaseGeometry()

Test integer validator:
	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	...
	ValueError: distance must be greater than 0

	>>> bg.integer_validator("age")
	Traceback (most recent call last):
	...
	TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", True)
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", {3,4})
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
	...
	TypeError: age must be an integer


Test area:
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented
